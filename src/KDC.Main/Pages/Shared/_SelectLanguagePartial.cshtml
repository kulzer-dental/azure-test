@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@using System.Globalization

@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures!
        .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
        .Where(c => c.Value != requestCulture!.RequestCulture.UICulture.Name)
        .ToList();

    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

@if(cultureItems.Count() > 0) {
    <button id="dropdownDefaultButton" data-dropdown-toggle="dropdown"
                                class="btn-text--primary flex items-center" type="button">
        <span>@requestCulture?.RequestCulture.UICulture.NativeName</span>
        <span class="material-symbols-outlined">arrow_drop_down</span>
    </button>

    <!-- Dropdown menu -->
    <div id="dropdown"
        class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
        <ul class="py-2 text-sm text-gray-700 dark:text-gray-200"
            aria-labelledby="dropdownDefaultButton">
            @foreach(var item in cultureItems) {
                <li>
                    <a asp-page="/SetCulture" asp-route-culture="@item.Value" asp-route-returnUrl="@returnUrl"
                        class="block px-4 py-2 link">@item.Text</a>
                </li>
            }
        </ul>
    </div>
}

name: Build and deploy container app to Azure Web App - kdc-test

on:
  push:
    branches: # Run workflow on push to main branch
      - main
  pull_request: # Run workflow on pull request to main branch
    branches:
      - main
  workflow_dispatch: # Allow manual triggering of the workflow

# Important permissions for the workflow granted to github actions
# If it still doesn't work, check the container's permissions (or simply delete the image completely and try again)
permissions:
  packages: read
  contents: read

jobs:
  detect:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    outputs:
      runner: ${{ steps.pick.outputs.runner }}
    steps:
      - id: pick
        uses: jimmygchen/runner-fallback-action@v1
        with:
          primary-runner: "self-hosted"
          fallback-runner: "ubuntu-latest"
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build: # Build and push Docker image to GitHub Container Registry
    needs: detect
    runs-on: ${{ fromJson(needs.detect.outputs.runner) }}
    permissions:
     packages: write # Set here: https://github.com/[organization]/[repository]/settings/actions
     contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io/
          username: ${{ github.actor }} # GitHub username = GitHub actions actor
          password: ${{ secrets.GITHUB_TOKEN }} # GitHub token generated by GitHub Actions

      # Use docker/metadata-action to generate safe Docker tags from branch, PR, and commit
      # This action automatically sanitizes branch names and handles all edge cases
      # See: https://github.com/docker/metadata-action
      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/kulzer-dental/kdc-experimental-image
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push container image to registry (latest)
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Use tags generated by metadata-action for robust and safe tagging
          tags: ${{ steps.meta.outputs.tags }}
          file: ./Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  deploy: # Deploy the Docker image to Azure Web App
    needs: build
    runs-on: ${{ fromJson(needs.detect.outputs.runner) }}

    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "kdc-test"
          slot-name: "Production" # Use "Production" slot for deployment
          images: "ghcr.io/kulzer-dental/kdc-experimental-image:latest"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
